# #!/bin/bash
# fetch_lyrics () {
# 	song=`curl -s --get "https://makeitpersonal.co/lyrics" --data-urlencode "artist=$artist" --data-urlencode "title=$title"`;
# }

# artist=$1
# title=$2
# fetch_lyrics
# if [ "$song" == "Sorry, We don't have lyrics for this song yet." ]; then
# 	title=$1
# 	artist=$2
# 	fetch_lyrics
# fi

# echo -e "$artist - $title\n$song"


# -----------------------------------------------------------------------------------------------------------



# curl 'https://www.lyrics007.com/search.php?category=artist&q=michael+buble'

#! /bin/sh -
PROGNAME=$0

invalid() {
  if [ -z "$error" -a "$error"!=" " ]; then
    error="Invalid command."
  fi

  cat << EOF >&2
$error 
Try '$PROGNAME --help' for more information.
EOF
  exit 1
}

usage() {
  cat << EOF >&2
Usage: $PROGNAME [OPTIONS] [TEXT]

Options (default value in (), *required):
  -c, --clip                    List song by matching lyrics clip
  -a, --artist                  List song by Artist's Name
  -t, --title                   List song by matching title
      --help                    display this help and exit
EOF
  exit 1
}


sanitizeText() {
  # removes extra white space
  text="$(echo "${text}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
  # converts to lowercase
  text="$(echo "$text" | sed -e 's/\(.*\)/\L\1/')"
  # converts internal space to plus for web search
  text="$(echo "$text" | sed -e 's/\ /+/')"
}

checkEmptyTextAndClean() {
  if [ -z "$text" -a "$text"!=" " ]; then
    error="Invalid command, requires text to search."
    invalid
    exit 1
  else
    sanitizeText
  fi
}

fetchSongs() {
  song=`curl -s --get "https://www.lyrics007.com/search.php?$string"`;
  echo $song
}

searchFromClip() {
  checkEmptyTextAndClean
  cat << EOF >&2
The clip is $text
EOF
  exit 1
}

searchFromArtist() {
  checkEmptyTextAndClean
  cat << EOF >&2
The artist is $text
EOF
  string="category=artist&q=$text"
  fetchSongs
  exit 1
}

searchFromTitle() {
  checkEmptyTextAndClean
  cat << EOF >&2
The title is $text
EOF
  exit 1
}

while true; do
  case $1 in
    (-c|--clip) shift; text=$@; searchFromClip;;
    (-a|--artist) shift; text=$@; searchFromArtist;;
    (-t|--title) shift; text=$@; searchFromTitle;;
    (--help) usage;;
    (*) invalid
  esac
done